{"version":3,"sources":["webpack://BlueRetreat/webpack/universalModuleDefinition","webpack://BlueRetreat/webpack/bootstrap","webpack://BlueRetreat/./src/index.ts","webpack://BlueRetreat/./src/retreat-data.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","initBlueRetreat","getExcludeState","_retreat_data__WEBPACK_IMPORTED_MODULE_0__","SET_KEEP_ALIVE_EXCLUDE","STORE_MODULE_KEY","routerHistory","currentPopStateName","store","router","isPinia","isVuex","initStatus","opts","_a","useRetreatStore","_router","_store","console","log","state","exclude","$id","Error","registerModule","mutations","beforeEach","to","from","next","meta","queryHistoryByName","length","includes","push","setKeepAliveExclude","setTimeout","index","indexOf","splice","findHistory","pop","removeHistoryByName","beforePushHistory","afterEach","history","position","queryHistoryByKey","ref","currentRoute","__v_isRef","isRef","time","Date","pushHistory","_exclude","assign","commit","type","_b","findIndex","currentRouterHistory","nextRouterHistory","forEach","window","addEventListener","event","retreatData","name_1","key_1","historyIndex","setRetreatData","resetRetreatData","getCurrentRetreatData","getRetreatData","_retreatData","once","current"],"mappings":";;;;;;;;;CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,YAAAD,IAEAD,EAAA,YAAAC,IARA,CASC,oBAAAK,UAAAC,KAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAR,QAGA,IAAAC,EAAAK,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAV,YAUA,OANAW,EAAAH,GAAAI,KAAAX,EAAAD,QAAAC,IAAAD,QAAAO,GAGAN,EAAAS,GAAA,EAGAT,EAAAD,QA0DA,OArDAO,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAf,EAAAgB,EAAAC,GACAV,EAAAW,EAAAlB,EAAAgB,IACAG,OAAAC,eAAApB,EAAAgB,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAvB,GACA,oBAAAwB,eAAAC,aACAN,OAAAC,eAAApB,EAAAwB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAApB,EAAA,cAAiD0B,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAjC,GACA,IAAAgB,EAAAhB,KAAA4B,WACA,WAA2B,OAAA5B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAM,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,WAIAhC,IAAAiC,EAAA,kCClFAjC,EAAAgB,EAAAkB,GAAAlC,EAAAQ,EAAA0B,EAAA,oCAAAC,IAAAnC,EAAAQ,EAAA0B,EAAA,oCAAAE,IAAA,IAAAC,EAAArC,EAAA,GAAAA,EAAAQ,EAAA0B,EAAA,mCAAAG,EAAA,iBAAArC,EAAAQ,EAAA0B,EAAA,qCAAAG,EAAA,mBAAArC,EAAAQ,EAAA0B,EAAA,0CAAAG,EAAA,wBAAArC,EAAAQ,EAAA0B,EAAA,mCAAAG,EAAA,iBAGA,IAAAC,EAAA,yBAEAC,EAAA,aAEAC,KAEAC,EAAA,KAEAC,EAAA,KACAC,EAAA,KAEAC,GAAA,EACAC,GAAA,EAWO,IACPC,EADOX,GACPW,GAAA,EACA,SAAAC,GACA,IAAAD,EAAA,CAEA,IAiDAE,EApBAC,EA7BAC,EAAAH,EAAAJ,OAAAQ,EAAAJ,EAAAL,MACA,IAAAQ,IAAAC,EACA,OAAAC,QAAAC,IAAA,sFAGAV,EAAAO,EAeA,mBAdAR,EAAAS,IAuBAF,EAAAP,EAAAH,GACAe,MAAA,WAA4B,OAE5BC,gBAIAb,EAAAO,MAEAP,EAAAc,IAMAZ,GAAA,GALAF,EAAA,KACA,IAAAe,MAAA,yBAWAf,EAAAgB,eAAAnB,GACAe,OACAC,YAEAI,WAAAX,KACAA,EAAAV,GAAA,SAAAgB,EAAAC,GACAD,EAAAf,GAAAgB,GAEAP,KAGAH,GAAA,GAKAF,EAAAiB,WAAA,SAAAC,EAAAC,EAAAC,IA2EA,SAAAhB,GACA,IAAAc,EAAAd,EAAAc,GAAAE,GAAAhB,EAAAe,KAAAf,EAAAgB,MAEAtD,EADAoD,EAAAG,KACAvD,KAEA,GAAAA,IAAAgC,EACA,OAAAsB,IAKA,GAJAtB,EAAA,KAIA,IAFAwB,GAA0CxD,SAE1CyD,OACA,OAAAH,IAEA,IAAAR,EAAAnB,IACAmB,EAAAY,SAAA1D,GAuBAsD,KArBAR,EAAAa,KAAA3D,GAEA4D,EAAAd,GAEAe,WAAA,WAEA,IAAAf,EAAAnB,IACAmC,EAAAhB,EAAAiB,QAAA/D,IACA,IAAA8D,GACAhB,EAAAkB,OAAAF,EAAA,GAGAF,EAAAd,GA+CA,SAAAR,GAKA,IAJA,IACA2B,EAAAT,GACAxD,KAFAsC,EAAAtC,OAIAiE,EAAAR,QAAA,CACA,IAAAK,EAAA/B,EAAAgC,QAAAE,IAAAR,OAAA,IACA1B,EAAAiC,OAAAF,EAAA,GACAG,EAAAC,OArDAC,EAAiCnE,SAEjCsD,OA3GAc,EACAhB,KACAC,OACAC,WAIApB,EAAAmC,UAAA,WACAR,WAAA,YAsHA,WACA,IAAAhB,EAAAyB,QAAAzB,MACA7B,EAAA6B,EAAA7B,KAAA6B,EAAA0B,SACA,GAAArC,GAAAlB,IAEAwD,GAAkDxD,QAClD,CAEA,IApNAyD,EAsNAzE,GAtNAyE,EAoNAvC,EAAAwC,aAxNA,SAAAD,GACA,OAAAA,EAAAE,UAIAC,CAAAH,KAAA/D,MAAA+D,GAoNAlB,KACAvD,KACAA,GAGA+B,EAAA4B,MAEA3C,MAEAhB,OAEA6E,MAAA,IAAAC,QAxIAC,OAlEA1C,GAAA,KA4KA,SAAAuB,EAAAd,GACA,IAAAkC,EAAA7E,OAAA8E,UAAAnC,GACAX,EACAF,EAAAa,QAAAkC,EAGA/C,EAAAiD,OAAArD,EAAAmD,GAwCA,SAAAR,EAAAlC,QACA,IAAAA,IAA0BA,MAM1B,IALA,IAEAC,EAAAD,EAAA6C,KAEAA,OAAA,IAAA5C,EAAA,UAAAA,EAAA6C,EAAA9C,EAAA+C,iBAAA,IAAAD,KAAApE,EAAAsB,EAAAtB,IACA8C,EAAA,EAAuBA,EAAA/B,EAAA0B,OAA8BK,IAAA,CACrD,IAAAwB,EAAAvD,EAAA+B,GACAyB,EAAAxD,EAAA+B,EAAA,GACA,GAAAwB,EAAAtE,SACA,SAAAmE,GACAI,EACA,OAAAF,EACAvB,EACAyB,EAEA,GAAAD,EAAAtE,SAAA,YAAAmE,EACA,OAAAE,EACAvB,EACAwB,EAGA,OAAAD,GACA,EACA,KAGA,SAAA7B,EAAAlB,QACA,IAAAA,IAA0BA,MAC1B,IAAAtC,EAAAsC,EAAAtC,KACAiE,KACA,OAAAjE,GAEA+B,EAAAyD,QAAA,SAAAlB,GACAA,EAAAtE,UAEAiE,EAAAN,KAAAW,KAEAL,GANAA,EASO,SAAAtC,IACP,IAAAmB,KAEA,GAAAb,EAAA,CAEA,GAAAE,EACA,OAAAF,EAAAa,WAEA,GAAAV,EAEA,OAAAH,EAAAY,MAAAf,GAAAgB,WAGA,OAAAA,EApJA2C,OAAAC,iBAAA,WArDA,SAAAC,GACAA,EAAA9C,QACA8C,EAAA9C,UAEA8C,EAAA9C,MAAA+C,YAAkCzF,OAAAyB,EAAA,sBAAAzB,GAClC,IAAA0C,EAAA8C,EAAA9C,MACA7B,EAAA6B,EAAA7B,KAAA6B,EAAA0B,SACAgB,EAAAf,GACAxD,MACAmE,KAAA,SAEAG,EAAAd,GACAxD,QAYA,GATAgB,EAAAsD,EACAA,EAAAtF,KACA,KAGA,OAAAsF,GAAAvD,EAAA0B,OAAA,IACA8B,EAAAxD,IAAA0B,OAAA,IAGA8B,EAAA,CACA,IAAAhD,EAAAgD,EAAAM,EAAAtD,EAAAvC,KAAA8F,EAAAvD,EAAAvB,IAEA8B,EAAAnB,IACA,GAAAmB,EAAAY,SAAAmC,GACA,OACA/C,EAAAa,KAAAkC,GAEAjC,EAAAd,GACAe,WAAA,WACA,IAAAf,EAAAnB,IACAmC,EAAAhB,EAAAiB,QAAA8B,IACA,IAAA/B,GACAhB,EAAAkB,OAAAF,EAAA,GAGAF,EAAAd,GAEA,IAAAiD,EAAAvB,GACAxD,IAAA8E,EACAT,WAAA,KAGA,IAAAU,GACAhE,EAAAiC,OAAA+B,EAAA,IAEa,qCCrKbxG,EAAAgB,EAAAkB,GAAAlC,EAAAQ,EAAA0B,EAAA,mCAAAuE,IAAAzG,EAAAQ,EAAA0B,EAAA,qCAAAwE,IAAA1G,EAAAQ,EAAA0B,EAAA,0CAAAyE,IAAA3G,EAAAQ,EAAA0B,EAAA,mCAAA0E,IACA,IAAAP,KAEO,SAAAI,EAAAI,GACPR,EAAAQ,EAGO,SAAAH,IACPL,KAGO,SAAAM,IACP,OAAAN,EAGO,SAAAO,EAAA7D,QACP,IAAAA,IAA0BA,MAC1B,IAEAC,EAAAD,EAAA+D,KAGAC,EAAAV,EAGA,YAJA,IAAArD,OAGA0D,IACAK","file":"blue-retreat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BlueRetreat\"] = factory();\n\telse\n\t\troot[\"BlueRetreat\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./static\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { getCurrentRetreatData } from \"./retreat-data\";\r\nexport * from \"./retreat-data\";\r\n//mutation 方法名\r\nvar SET_KEEP_ALIVE_EXCLUDE = \"SET_KEEP_ALIVE_EXCLUDE\";\r\n//vuex模块名\r\nvar STORE_MODULE_KEY = \"KEEP_ALIVE\";\r\n//路由的历史记录\r\nvar routerHistory = [];\r\n//当前的popState的name值\r\nvar currentPopStateName = null;\r\n//配置vue|pinia相关的router以及store\r\nvar store = null;\r\nvar router = null;\r\n//实际的存储环境\r\nvar isPinia = false;\r\nvar isVuex = false;\r\n//针对vue3 ref处理\r\nfunction isRef(ref) {\r\n    return ref.__v_isRef;\r\n}\r\n//针对vue3 ref处理\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\n//初始化\r\n//如果使用的是pinia，需要在createPinia()后使用当前进行初始化配置\r\nexport var initBlueRetreat = (function () {\r\n    var initStatus = false;\r\n    return function (opts) {\r\n        if (initStatus)\r\n            return;\r\n        var _router = opts.router, _store = opts.store;\r\n        if (!(_router && _store)) {\r\n            return console.log(\"blue-retreat init error,please required set Vue Router and (Vuex|Pinia) in options\");\r\n        }\r\n        //设置相关配置信息\r\n        router = _router;\r\n        store = _store;\r\n        //动态注册store\r\n        storeRegister();\r\n        //设置afterEach\r\n        setRouterHooks();\r\n        //设置初始化状态\r\n        initStatus = true;\r\n    };\r\n})();\r\n//把keep alive exclude状态处理在store module\r\n//需要createPinia()后使用当前\r\nfunction storeRegister() {\r\n    //对于pinia的处理 这里处理pinia的定义\r\n    //Pinia的传入defineStore来构建\r\n    if (typeof store === \"function\") {\r\n        piniaStore();\r\n    }\r\n    else {\r\n        vuexStore();\r\n    }\r\n}\r\n//Pinia store\r\nfunction piniaStore() {\r\n    var useRetreatStore = store(STORE_MODULE_KEY, {\r\n        state: function () { return ({\r\n            //排除数据\r\n            exclude: [],\r\n        }); },\r\n    });\r\n    //获取store的实例\r\n    store = useRetreatStore();\r\n    //判断是否为pinia特性\r\n    if (!store || !store.$id) {\r\n        store = null;\r\n        new Error(\"store is not Pinia\");\r\n    }\r\n    else {\r\n        //存储库判断\r\n        isPinia = true;\r\n    }\r\n}\r\n//vuex store\r\nfunction vuexStore() {\r\n    var _a;\r\n    //对于vuex的处理\r\n    store.registerModule(STORE_MODULE_KEY, {\r\n        state: {\r\n            exclude: [],\r\n        },\r\n        mutations: (_a = {},\r\n            _a[SET_KEEP_ALIVE_EXCLUDE] = function (state, exclude) {\r\n                state[STORE_MODULE_KEY] = exclude;\r\n            },\r\n            _a),\r\n    });\r\n    //存储库判断\r\n    isVuex = true;\r\n}\r\n//设置路由钩子状态\r\nfunction setRouterHooks() {\r\n    //路由进前处理\r\n    router.beforeEach(function (to, from, next) {\r\n        beforePushHistory({\r\n            to: to,\r\n            from: from,\r\n            next: next,\r\n        });\r\n    });\r\n    //路由进入后的处理\r\n    router.afterEach(function () {\r\n        setTimeout(function () {\r\n            //写入history\r\n            pushHistory();\r\n        });\r\n    });\r\n}\r\n//注册处理popState事件处理\r\nfunction popStateEvent() {\r\n    var popStateHandler = function (event) {\r\n        if (!event.state) {\r\n            event.state = {};\r\n        }\r\n        event.state.retreatData = getCurrentRetreatData();\r\n        var state = event.state;\r\n        var key = state.key || state.position;\r\n        var nextRouterHistory = queryHistoryByKey({\r\n            key: key,\r\n            type: \"next\",\r\n        });\r\n        var currentRouterHistory = queryHistoryByKey({\r\n            key: key,\r\n        });\r\n        //记录popstate的name,这里可能是被销毁过的history\r\n        currentPopStateName = currentRouterHistory\r\n            ? currentRouterHistory.name\r\n            : null;\r\n        //如果是那种回环访问，当前的页面是后退回来产生的新页面\r\n        //这种在routerHistory是不存在的，这里需要移除最后一个路由缓存\r\n        if (currentRouterHistory === null && routerHistory.length > 0) {\r\n            nextRouterHistory = routerHistory[routerHistory.length - 1];\r\n        }\r\n        //如果当前页的下一个页面（后退回来的页面）在history中有记录，这里清空缓存\r\n        if (nextRouterHistory) {\r\n            var _a = nextRouterHistory, name_1 = _a.name, key_1 = _a.key;\r\n            //获取store中的exclude state\r\n            var exclude = getExcludeState();\r\n            if (exclude.includes(name_1))\r\n                return;\r\n            exclude.push(name_1);\r\n            //设置store\r\n            setKeepAliveExclude(exclude);\r\n            setTimeout(function () {\r\n                var exclude = getExcludeState();\r\n                var index = exclude.indexOf(name_1);\r\n                if (index !== -1) {\r\n                    exclude.splice(index, 1);\r\n                }\r\n                //设置store\r\n                setKeepAliveExclude(exclude);\r\n                //再历史中的index\r\n                var historyIndex = queryHistoryByKey({\r\n                    key: key_1,\r\n                    findIndex: true,\r\n                });\r\n                //这里删除排序\r\n                if (historyIndex !== -1) {\r\n                    routerHistory.splice(historyIndex, 1);\r\n                }\r\n            }, 50);\r\n        }\r\n    };\r\n    window.addEventListener(\"popstate\", popStateHandler);\r\n}\r\n//注册popstate事件处理\r\npopStateEvent();\r\n//进入路由前处理\r\nfunction beforePushHistory(opts) {\r\n    var to = opts.to, from = opts.from, next = opts.next;\r\n    var meta = to.meta;\r\n    var name = meta.name;\r\n    //如果当前是通过popstate触发的，不进行缓存的处理\r\n    if (name === currentPopStateName)\r\n        return next();\r\n    currentPopStateName = null;\r\n    //找一下之前历史是否存在相同的缓存（回环访问的那种情况）\r\n    var findHistory = queryHistoryByName({ name: name });\r\n    //如果之前存在缓存了，先杀掉之前的缓存\r\n    if (findHistory.length === 0)\r\n        return next();\r\n    //获取store中的exclude state\r\n    var exclude = getExcludeState();\r\n    if (!exclude.includes(name)) {\r\n        //写入排除缓存name\r\n        exclude.push(name);\r\n        //设置store\r\n        setKeepAliveExclude(exclude);\r\n        //下一跳移除对应的规则\r\n        setTimeout(function () {\r\n            //获取store中的exclude state\r\n            var exclude = getExcludeState();\r\n            var index = exclude.indexOf(name);\r\n            if (index !== -1) {\r\n                exclude.splice(index, 1);\r\n            }\r\n            //设置store\r\n            setKeepAliveExclude(exclude);\r\n            //删除历史记录\r\n            removeHistoryByName({ name: name });\r\n            //完成处理\r\n            next();\r\n        });\r\n    }\r\n    else {\r\n        //完成处理\r\n        next();\r\n    }\r\n}\r\n//设置store\r\nfunction setKeepAliveExclude(exclude) {\r\n    var _exclude = Object.assign([], exclude);\r\n    if (isPinia) {\r\n        store.exclude = _exclude;\r\n    }\r\n    else {\r\n        store.commit(SET_KEEP_ALIVE_EXCLUDE, _exclude);\r\n    }\r\n}\r\n//路由访问的时候，加入对应的key处理\r\nfunction pushHistory() {\r\n    var state = history.state;\r\n    var key = state.key || state.position;\r\n    if (!router || !key)\r\n        return;\r\n    var currentRouterHistory = queryHistoryByKey({ key: key });\r\n    if (currentRouterHistory)\r\n        return;\r\n    var currentRoute = router.currentRoute;\r\n    var meta = unref(currentRoute).meta;\r\n    var name = meta.name;\r\n    if (!name)\r\n        return;\r\n    //写入历史\r\n    routerHistory.push({\r\n        //state.key\r\n        key: key,\r\n        //组件的name\r\n        name: name,\r\n        //这里是记录加入时间\r\n        time: +new Date(),\r\n    });\r\n}\r\n//删除历史记录\r\nfunction removeHistoryByName(opts) {\r\n    var name = opts.name;\r\n    var findHistory = queryHistoryByName({\r\n        name: name,\r\n    });\r\n    while (findHistory.length) {\r\n        var index = routerHistory.indexOf(findHistory[findHistory.length - 1]);\r\n        routerHistory.splice(index, 1);\r\n        findHistory.pop();\r\n    }\r\n}\r\n//通过key查询历史\r\nfunction queryHistoryByKey(opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    var \r\n    /*current next*/\r\n    _a = opts.type, \r\n    /*current next*/\r\n    type = _a === void 0 ? \"current\" : _a, _b = opts.findIndex, findIndex = _b === void 0 ? false : _b, key = opts.key;\r\n    for (var index = 0; index < routerHistory.length; index++) {\r\n        var currentRouterHistory = routerHistory[index];\r\n        var nextRouterHistory = routerHistory[index + 1];\r\n        if (currentRouterHistory.key === key &&\r\n            type === \"next\" &&\r\n            nextRouterHistory) {\r\n            if (findIndex)\r\n                return index;\r\n            return nextRouterHistory;\r\n        }\r\n        else if (currentRouterHistory.key === key && type === \"current\") {\r\n            if (findIndex)\r\n                return index;\r\n            return currentRouterHistory;\r\n        }\r\n    }\r\n    if (findIndex)\r\n        return -1;\r\n    return null;\r\n}\r\n//通过name查询历史记录 这里提供给router afterEach使用\r\nfunction queryHistoryByName(opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    var name = opts.name;\r\n    var findHistory = [];\r\n    if (!name)\r\n        return findHistory;\r\n    routerHistory.forEach(function (history) {\r\n        if (history.name !== name)\r\n            return;\r\n        findHistory.push(history);\r\n    });\r\n    return findHistory;\r\n}\r\n//获取store module keep alive\r\nexport function getExcludeState() {\r\n    var exclude = [];\r\n    //不存在\r\n    if (store) {\r\n        //pinia处理\r\n        if (isPinia) {\r\n            return store.exclude || exclude;\r\n        }\r\n        else if (isVuex) {\r\n            //Vuex处理\r\n            return store.state[STORE_MODULE_KEY].exclude || exclude;\r\n        }\r\n    }\r\n    return exclude;\r\n}\r\n","//需要撤退的数据\r\nvar retreatData = {};\r\n//设置需要传递数据\r\nexport function setRetreatData(_retreatData) {\r\n    retreatData = _retreatData;\r\n}\r\n//清空传递数据\r\nexport function resetRetreatData() {\r\n    retreatData = {};\r\n}\r\n//获取当前的撤退数据\r\nexport function getCurrentRetreatData() {\r\n    return retreatData;\r\n}\r\n//获取传递数据\r\nexport function getRetreatData(opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    var \r\n    //只会使用一次\r\n    _a = opts.once, \r\n    //只会使用一次\r\n    once = _a === void 0 ? true : _a;\r\n    var current = retreatData;\r\n    //只会使用一次，清空原有的数据\r\n    once && resetRetreatData();\r\n    return current;\r\n}\r\n"],"sourceRoot":""}