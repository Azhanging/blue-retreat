{"version":3,"sources":["webpack://BlueRetreat/webpack/universalModuleDefinition","webpack://BlueRetreat/webpack/bootstrap","webpack://BlueRetreat/./src/index.ts","webpack://BlueRetreat/./src/retreat-data.ts","webpack://BlueRetreat/./src/utils.ts","webpack://BlueRetreat/./src/const.ts","webpack://BlueRetreat/./src/store.ts"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","defineBlueRetreat","getExcludeState","_retreat_data__WEBPACK_IMPORTED_MODULE_0__","_utils__WEBPACK_IMPORTED_MODULE_1__","_const__WEBPACK_IMPORTED_MODULE_2__","_store__WEBPACK_IMPORTED_MODULE_3__","defineStatus","TICKET_TIME","routerHistory","currentPopStateName","store","router","opts","_router","_store","console","log","beforeEach","to","from","next","matchedRouteNames","historyMatchedRouteNames","historyRouteName","forEach","history","matchedNames","includes","routeName","push","filterMatchedRouteNamesInHistory","length","exclude","apply","setExcludeState","setTimeout","handler","findHistory","queryHistoryByName","lastIndex","index","indexOf","splice","pop","Array","removeHistoryByName","beforeRouterHook","afterEach","state","queryHistoryByKey","currentRoute","routeMatchedNames","afterRouterHook","_exclude","assign","commit","_a","type","_b","findIndex","currentRouterHistory","nextRouterHistory","window","addEventListener","event","retreatData","name_1","key_1","historyIndex","setRetreatData","resetRetreatData","getCurrentRetreatData","getRetreatData","_retreatData","once","current","unref","ref","__v_isRef","isRef","getStateKey","position","getRouteName","meta","getRouteMatchedNames","matched","map","route","SET_KEEP_ALIVE_EXCLUDE","STORE_MODULE_NAME","isPinia","isVuex","storeRegister","_const__WEBPACK_IMPORTED_MODULE_0__","useRetreatStore","$id","error","piniaStore","registerModule","mutations","vuexStore"],"mappings":"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","file":"blue-retreat.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"BlueRetreat\"] = factory();\n\telse\n\t\troot[\"BlueRetreat\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./static\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { getCurrentRetreatData } from \"./retreat-data\";\r\nimport { unref, getStateKey, getRouteName, getRouteMatchedNames, } from \"./utils\";\r\nimport { SET_KEEP_ALIVE_EXCLUDE, STORE_MODULE_NAME } from \"./const\";\r\nimport * as storeModule from \"./store\";\r\nexport * from \"./retreat-data\";\r\n/*\r\n  一层 || 多层 实际占用一条历史记录\r\n  路由进入时，先会排除原有记录上的所有\r\n*/\r\n//下一跳的延迟处理\r\nvar TICKET_TIME = 50;\r\n//路由的历史记录\r\nvar routerHistory = [];\r\n//当前的popState的name值\r\nvar currentPopStateName = null;\r\n//配置vue|pinia相关的router以及store\r\nvar store = null;\r\nvar router = null;\r\n//初始化\r\n//如果使用的是pinia，需要在createPinia()后使用当前进行初始化配置\r\nexport var defineBlueRetreat = (function () {\r\n    var defineStatus = false;\r\n    return function (opts) {\r\n        if (defineStatus)\r\n            return;\r\n        var _router = opts.router, _store = opts.store;\r\n        if (!(_router && _store)) {\r\n            return console.log(\"blue-retreat init error,please required set Vue Router and (Vuex|Pinia) in options\");\r\n        }\r\n        //设置相关配置信息\r\n        router = _router;\r\n        //动态注册store\r\n        store = storeModule.storeRegister(_store);\r\n        //设置afterEach\r\n        setRouterHooks();\r\n        //设置初始化状态\r\n        defineStatus = true;\r\n    };\r\n})();\r\n//设置路由钩子状态\r\nfunction setRouterHooks() {\r\n    //路由进前处理\r\n    router.beforeEach(function (to, from, next) {\r\n        beforeRouterHook({\r\n            to: to,\r\n            from: from,\r\n            next: next,\r\n        });\r\n    });\r\n    //路由进入后的处理\r\n    router.afterEach(function () {\r\n        setTimeout(function () {\r\n            //写入history\r\n            afterRouterHook();\r\n        }, TICKET_TIME);\r\n    });\r\n}\r\n//注册处理popState事件处理\r\nfunction popStateEvent() {\r\n    //这里的类型\r\n    var popStateHandler = function (event) {\r\n        if (!event.state) {\r\n            event.state = {};\r\n        }\r\n        //后退写入数据\r\n        event.state.retreatData = getCurrentRetreatData();\r\n        var state = event.state;\r\n        var key = getStateKey(state);\r\n        //通过key查询当前的路由记录\r\n        var currentRouterHistory = queryHistoryByKey({\r\n            key: key,\r\n        });\r\n        //查找当前记录的下一个路由,后退前的路由记录\r\n        var nextRouterHistory = queryHistoryByKey({\r\n            key: key,\r\n            type: \"next\",\r\n        });\r\n        //记录popstate的name,这里可能是被销毁过的history\r\n        currentPopStateName = currentRouterHistory\r\n            ? currentRouterHistory.name\r\n            : null;\r\n        //这种在routerHistory是不存在的，这里需要移除最后一个路由缓存\r\n        //由于一级多层级的都只存在一条历史记录，这里后退的过程中找不到对于之前层级的记录了，\r\n        //这里将最后一条记录当作当作前记录来处理\r\n        if (currentRouterHistory === null && routerHistory.length > 0) {\r\n            nextRouterHistory = routerHistory[routerHistory.length - 1];\r\n        }\r\n        //如果当前页的下一个页面（后退回来的页面）在history中有记录，这里清空缓存\r\n        if (nextRouterHistory) {\r\n            var _a = nextRouterHistory, name_1 = _a.name, key_1 = _a.key;\r\n            //获取store中的exclude state\r\n            var exclude = getExcludeState();\r\n            //写入到排除记录\r\n            exclude.push(name_1);\r\n            //设置store\r\n            setExcludeState(exclude);\r\n            //下一宏任务处理\r\n            setTimeout(function () {\r\n                //设置store\r\n                setExcludeState([]);\r\n                //通过key删除历史记录\r\n                removeHistoryByKey(key_1);\r\n            }, TICKET_TIME);\r\n        }\r\n    };\r\n    //注册内置popstate事件，监听后腿时的处理\r\n    window.addEventListener(\"popstate\", popStateHandler);\r\n}\r\n//注册popstate事件处理\r\npopStateEvent();\r\n//再历史中查找name相关的的name，记录到最长的链路\r\nfunction filterMatchedRouteNamesInHistory(name) {\r\n    var historyRouteName = [];\r\n    routerHistory.forEach(function (history) {\r\n        var matchedNames = history.matchedNames;\r\n        if (matchedNames.includes(name)) {\r\n            matchedNames.forEach(function (routeName) {\r\n                if (historyRouteName.includes(routeName))\r\n                    return;\r\n                historyRouteName.push(routeName);\r\n            });\r\n        }\r\n    });\r\n    return historyRouteName;\r\n}\r\n//进入路由前处理\r\n//这里多为处理回环路由的状态\r\nfunction beforeRouterHook(opts) {\r\n    var to = opts.to, next = opts.next;\r\n    //获取来源路由的名称\r\n    var name = getRouteName(to);\r\n    //如果当前是通过popstate触发的，不进行缓存的处理\r\n    if (name === currentPopStateName) {\r\n        currentPopStateName = null;\r\n        return next();\r\n    }\r\n    currentPopStateName = null;\r\n    //匹配的路由链路名\r\n    var matchedRouteNames = (function () {\r\n        //访问的路由链路\r\n        var matchedRouteNames = getRouteMatchedNames(to);\r\n        //从历史记录中查找当前name的是否存在的多级的路由链路，\r\n        //如果存在多级链路，比访问的链路更大，这里将会排除最大的访问链路\r\n        //这里的处理将会尝试一级路由和多级路由只会占用一条历史记录\r\n        var historyMatchedRouteNames = filterMatchedRouteNamesInHistory(name);\r\n        if (historyMatchedRouteNames.length > matchedRouteNames.length) {\r\n            return historyMatchedRouteNames;\r\n        }\r\n        return matchedRouteNames;\r\n    })();\r\n    //获取store中的exclude state\r\n    var exclude = getExcludeState();\r\n    //排除链路上name\r\n    exclude.push.apply(exclude, matchedRouteNames);\r\n    //设置store\r\n    setExcludeState(exclude);\r\n    //下一跳移除对应的规则\r\n    setTimeout(function () {\r\n        //设置store\r\n        setExcludeState([]);\r\n        //删除排除路由名\r\n        removeHistoryByName(matchedRouteNames);\r\n        //完成处理\r\n        next();\r\n    }, TICKET_TIME);\r\n}\r\n//路由访问的时候，加入对应的key处理\r\nfunction afterRouterHook() {\r\n    var state = history.state;\r\n    //使用定位信息处理\r\n    var key = getStateKey(state);\r\n    if (!router || (!key && key !== 0))\r\n        return;\r\n    var currentRouterHistory = queryHistoryByKey({ key: key });\r\n    if (currentRouterHistory)\r\n        return;\r\n    var currentRoute = unref(router.currentRoute);\r\n    //当前路由name\r\n    var name = getRouteName(currentRoute);\r\n    //路由链路name\r\n    var routeMatchedNames = getRouteMatchedNames(currentRoute);\r\n    if (!name)\r\n        return;\r\n    //写入历史\r\n    routerHistory.push({\r\n        //state.key\r\n        key: key,\r\n        //组件的name\r\n        name: name,\r\n        //匹配的路由链路名\r\n        matchedNames: routeMatchedNames,\r\n    });\r\n}\r\n//设置store\r\nfunction setExcludeState(exclude) {\r\n    var _exclude = Object.assign([], exclude);\r\n    if (storeModule.isPinia) {\r\n        store.exclude = _exclude;\r\n    }\r\n    else if (storeModule.isVuex) {\r\n        store.commit(SET_KEEP_ALIVE_EXCLUDE, _exclude);\r\n    }\r\n}\r\n//删除历史记录\r\nfunction removeHistoryByName(name) {\r\n    function handler(name) {\r\n        var findHistory = queryHistoryByName({\r\n            name: name,\r\n        });\r\n        while (findHistory.length) {\r\n            var lastIndex = findHistory.length - 1;\r\n            var index = routerHistory.indexOf(findHistory[lastIndex]);\r\n            routerHistory.splice(index, 1);\r\n            findHistory.pop();\r\n        }\r\n    }\r\n    if (typeof name === \"string\") {\r\n        handler(name);\r\n    }\r\n    else if (name instanceof Array) {\r\n        name.forEach(function (routeName) {\r\n            handler(routeName);\r\n        });\r\n    }\r\n}\r\n//通过key删除历史记录\r\nfunction removeHistoryByKey(key) {\r\n    //再历史中的index\r\n    var historyIndex = queryHistoryByKey({\r\n        key: key,\r\n        findIndex: true,\r\n    });\r\n    //这里删除排序\r\n    if (historyIndex !== -1) {\r\n        routerHistory.splice(historyIndex, 1);\r\n    }\r\n}\r\n//通过key查询历史,\r\n//查询key记录的索引\r\nfunction queryHistoryByKey(opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    var _a = opts.type, type = _a === void 0 ? \"current\" : _a, _b = opts.findIndex, findIndex = _b === void 0 ? false : _b, key = opts.key;\r\n    for (var index = 0; index < routerHistory.length; index++) {\r\n        var currentRouterHistory = routerHistory[index];\r\n        var nextRouterHistory = routerHistory[index + 1];\r\n        if (currentRouterHistory.key === key &&\r\n            type === \"next\" &&\r\n            nextRouterHistory) {\r\n            if (findIndex)\r\n                return index + 1;\r\n            return nextRouterHistory;\r\n        }\r\n        else if (currentRouterHistory.key === key && type === \"current\") {\r\n            if (findIndex)\r\n                return index;\r\n            return currentRouterHistory;\r\n        }\r\n    }\r\n    if (findIndex)\r\n        return -1;\r\n    return null;\r\n}\r\n//通过name查询历史记录 这里提供给router afterEach使用\r\nfunction queryHistoryByName(opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    var name = opts.name;\r\n    var findHistory = [];\r\n    if (!name)\r\n        return findHistory;\r\n    routerHistory.forEach(function (history) {\r\n        if (history.name !== name)\r\n            return;\r\n        findHistory.push(history);\r\n    });\r\n    return findHistory;\r\n}\r\n//获取store module keep alive\r\nexport function getExcludeState() {\r\n    var exclude = [];\r\n    //不存在\r\n    if (store) {\r\n        //pinia处理\r\n        if (storeModule.isPinia) {\r\n            return store.exclude || exclude;\r\n        }\r\n        else if (storeModule.isVuex) {\r\n            //Vuex处理\r\n            return store.state[STORE_MODULE_NAME].exclude || exclude;\r\n        }\r\n    }\r\n    return exclude;\r\n}\r\n","//需要撤退的数据\r\nvar retreatData = {};\r\n//设置需要传递数据\r\nexport function setRetreatData(_retreatData) {\r\n    retreatData = _retreatData;\r\n}\r\n//清空传递数据\r\nexport function resetRetreatData() {\r\n    retreatData = {};\r\n}\r\n//获取当前的撤退数据\r\nexport function getCurrentRetreatData() {\r\n    return retreatData;\r\n}\r\n//获取传递数据\r\nexport function getRetreatData(opts) {\r\n    if (opts === void 0) { opts = {}; }\r\n    var \r\n    //只会使用一次\r\n    _a = opts.once, \r\n    //只会使用一次\r\n    once = _a === void 0 ? true : _a;\r\n    var current = retreatData;\r\n    //只会使用一次，清空原有的数据\r\n    once && resetRetreatData();\r\n    return current;\r\n}\r\n","//针对vue3 ref处理\r\nfunction isRef(ref) {\r\n    return ref.__v_isRef;\r\n}\r\n//针对vue3 ref处理\r\nexport function unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\n//获取状态\r\nexport function getStateKey(state) {\r\n    return state.key || state.position || \"\";\r\n}\r\n//获取路由name\r\nexport function getRouteName(to) {\r\n    var _a = to.meta, meta = _a === void 0 ? {} : _a;\r\n    return meta.name || to.name || \"\";\r\n}\r\n//获取路由匹配名\r\nexport function getRouteMatchedNames(to) {\r\n    return to.matched.map(function (route) { return route.name || (route.meta && route.meta.name) || \"\"; });\r\n}\r\n","//mutation 方法名\r\nexport var SET_KEEP_ALIVE_EXCLUDE = \"SET_KEEP_ALIVE_EXCLUDE\";\r\n//模块名 || store id\r\nexport var STORE_MODULE_NAME = \"KEEP_ALIVE\";\r\n","import { SET_KEEP_ALIVE_EXCLUDE, STORE_MODULE_NAME } from \"./const\";\r\n//实际的存储环境\r\nexport var isPinia = false;\r\nexport var isVuex = false;\r\n//把keep alive exclude状态处理在store module\r\n//需要createPinia()后使用当前\r\nexport function storeRegister(store) {\r\n    //对于pinia的处理 这里处理pinia的定义\r\n    //Pinia的传入defineStore来构建\r\n    if (typeof store === \"function\") {\r\n        return piniaStore(store);\r\n    }\r\n    else {\r\n        return vuexStore(store);\r\n    }\r\n}\r\n//Pinia store\r\nfunction piniaStore(store) {\r\n    var useRetreatStore = store(STORE_MODULE_NAME, {\r\n        state: function () { return ({\r\n            //排除数据\r\n            exclude: [],\r\n        }); },\r\n    });\r\n    //获取store的实例\r\n    store = useRetreatStore();\r\n    //判断是否为pinia特性\r\n    if (!store || !store.$id) {\r\n        store = null;\r\n        console.error(\"store is not Pinia\");\r\n    }\r\n    else {\r\n        //存储库判断\r\n        isPinia = true;\r\n    }\r\n    return store;\r\n}\r\n//vuex store\r\nfunction vuexStore(store) {\r\n    var _a;\r\n    //对于vuex的处理\r\n    store.registerModule(STORE_MODULE_NAME, {\r\n        state: {\r\n            exclude: [],\r\n        },\r\n        mutations: (_a = {},\r\n            _a[SET_KEEP_ALIVE_EXCLUDE] = function (state, exclude) {\r\n                state.exclude = exclude;\r\n            },\r\n            _a),\r\n    });\r\n    //存储库判断\r\n    isVuex = true;\r\n    return store;\r\n}\r\n"],"sourceRoot":""}